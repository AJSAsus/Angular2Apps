Yes
Github.
-

    - GitHub is the Repository.

    - GitHub Maintained by the Google


1.Create the Repository Locally


2.Setting the user credentials to the Repository


3.Creating the Files in Repository


4.Commit the Files to the Repository


5.Creating the Branch


6.Checkout Branch


7.Merging the Code


8.Merge Conflicts


9.Integration of GitHub to the IDE'S


10.Commit the Files to the Cloud Repository


11.Push the Code to the Cloud Repository


12.Pull the Code from the Cloud Repoistory.


Installation Of Softwares.

1.Download and Install the Git.

    WebSite : https://git-scm.com/download/win

    file name : Git-2.12.2.2-64-bit.exe


Creating the Repository Locally.

    - Create the folder in any drive.

        Ex.
            E:\demo

    - rigth click on the "demo" folder

    - select "Git Bash Here"

    - execute the following command

        $git init

   [ Automatically demo folder converted as local repository ]


Set the User Credentials.

    - this credentials are used to track the code

    - $git config --global user.name "Naresh"

    - $git config --global user.email "hr@nareshit.in"



Create the Files to the Repository.

    $touch ctrl.js

        [ touch command used to create the files to the repository]

    $git status

        [ used to track the status of repository ]

        - "red color labels" indicating the untracked files.


Commit the Files to the Repository.
            ************************
    $git add ctrl.js

    $git commit

    press "i"

    type "initial commit"

    press "esc"

    type ":wq"

    press "enter"
            ***********************

    From 2nd Commit Onwards

        - Add the Code to the File

        - $git add ctrl.js

        - $git commit -m "Annonymus Class Created"


    -----------------------------

    $git log

         - used to genarate the log


Creating the Branch
-
$git branch branch_one


Checkout the Branch
-
$git checkout branch_one


Task_1

    Create the "branch_one" under "master" branch

    $git branch branch_one
    $git checkout branch_one


Task_2.

    Create the Following Branches under the "master" branch

    1.branch_one

    2.branch_two


    $git branch branch_one
    $git checkout branch_one

    $git checkout master
    $git branch branch_two
    $git checkout branch_two

    $git checkout master



Task_3.

    Merge the "branch_one" to the "master"


    $git checkout master
    $git merge my_branch



Task_4.

    Merge the "branch_one" to "branch_two"

    $git checkout branch_one
    $git merge branch_two


Task_5.

    Produce the Merge Conflict


    $git checkout master

        ****************
    sample.js
    -
    Line_1
    Line_2
        ***************

    $git add .
    $git commit -m "Two Lines"

    $git branch my_branch
    $git checkout my_branch


    $git checkout master
        *************
    sample.js
    -
    Line_1
    Line_2
    Line_3
        *************
    $git add .
    $git commit -m "Line_3"


    $git checkout my_branch
            *************
        sample.js
        -
        Line_1
        Line_2
        Line_4
            *************
    $git add .
    $git commit -m "Line_4"


    $git merge master


























